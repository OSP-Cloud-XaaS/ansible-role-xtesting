---
- name: Installing influxdb
  become: "{{ not lookup('env','VIRTUAL_ENV') }}"
  pip:
    name: influxdb
  register: my_result
  until: my_result is succeeded
  retries: 5
  delay: 10
  when:
    - influxdb_deploy
- name: Starting InfluxDB
  become: true
  community.general.docker_container:
    name: influxdb
    image: influxdb
    pull: '{{ docker_pull }}'
    recreate: '{{ docker_recreate }}'
    restart_policy: '{{ docker_restart_policy }}'
    published_ports:
      - '{{ influxdb_port }}:8086'
    volumes:
      - '{{ prefix }}/influxdb:/var/lib/influxdb'
  notify:
    - Waiting InfluxDB
  when:
    - influxdb_deploy
    - not use_kubernetes
- name: Adding InfluxDB chart repository
  community.kubernetes.helm_repository:
    name: influxdata
    repo_url: https://helm.influxdata.com/
  when:
    - influxdb_deploy
    - use_kubernetes
- name: Installing InfluxDB helm chart
  community.kubernetes.helm:
    name: influxdb
    chart_ref: influxdata/influxdb
    release_namespace: default
    wait: true
  when:
    - influxdb_deploy
    - use_kubernetes
- name: Creating xtesting@influxdb.service
  become: true
  template:
    src: influxdb.service.j2
    dest: '/etc/systemd/system/xtesting@influxdb.service'
    mode: '0644'
  when:
    - influxdb_deploy
    - use_kubernetes
- name: Restarting xtesting@influxdb.service
  become: true
  systemd:
    state: restarted
    daemon_reload: true
    name: xtesting@influxdb
  when:
    - influxdb_deploy
    - use_kubernetes
- name: Flushing handlers
  meta: flush_handlers
- name: Creating InfluxDB database
  community.general.influxdb_database:
    hostname: '{{ ipaddress }}'
    port: '{{ influxdb_port }}'
    database_name: '{{ project }}'
  when:
    - influxdb_deploy
