---
- name: Installing influxdb
  become: "{{ not lookup('env','VIRTUAL_ENV') }}"
  pip:
    name: influxdb
  register: my_result
  until: my_result is succeeded
  retries: 5
  delay: 10
  when:
    - influxdb_deploy
- name: Starting InfluxDB
  become: "{{ ansible_connection is defined }}"
  community.docker.docker_container:
    name: influxdb
    image: influxdb
    pull: '{{ docker_pull }}'
    recreate: '{{ docker_recreate }}'
    restart_policy: '{{ docker_restart_policy }}'
    published_ports:
      - '{{ influxdb_port }}:8086'
    volumes:
      - '{{ prefix }}/influxdb:/var/lib/influxdb'
    env:
      INFLUXDB_ADMIN_USER: xtesting
      INFLUXDB_ADMIN_PASSWORD: xtesting
    container_default_behavior: no_defaults
  when:
    - influxdb_deploy
    - not use_kubernetes
- name: Adding InfluxDB chart repository
  community.kubernetes.helm_repository:
    name: bitnami
    repo_url: https://charts.bitnami.com/bitnami
  when:
    - influxdb_deploy
    - use_kubernetes
- name: Installing InfluxDB helm chart
  community.kubernetes.helm:
    name: influxdb
    chart_ref: bitnami/influxdb
    release_namespace: default
    values:
      image:
        tag: 1.8.3-debian-10-r88
      auth:
        admin:
          username: xtesting
          password: xtesting
      influxdb:
        service:
          type: NodePort
          nodePorts:
            http: '{{ influxdb_port }}'
    wait: true
  when:
    - influxdb_deploy
    - use_kubernetes
- name: Creating InfluxDB database
  community.general.influxdb_database:
    hostname: '{{ ipaddress }}'
    port: '{{ influxdb_port }}'
    database_name: '{{ project }}'
    username: xtesting
    password: xtesting
    timeout: 5
    retries: "{{ ((influxdb_wait |int) / 5) |int }}"
  when:
    - influxdb_deploy
