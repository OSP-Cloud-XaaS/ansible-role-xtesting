---
- name: Adding ansible_user to docker group
  become: true
  user:
    name: "{{ ansible_user | default(lookup('env', 'USER')) }}"
    groups:
      - docker
    append: true
- name: Resetting connection
  meta: reset_connection
- name: Creating /etc/systemd/system/docker.service.d
  become: true
  file:
    path: /etc/systemd/system/docker.service.d
    state: directory
    mode: '0755'
  when:
    - "'http_proxy' in ansible_env or 'https_proxy' in ansible_env"
- name: Creating /etc/systemd/system/docker.service.d/http-proxy.conf
  become: true
  template:
    src: http-proxy.conf.j2
    dest: /etc/systemd/system/docker.service.d/http-proxy.conf
    mode: '0644'
  when:
    - "'http_proxy' in ansible_env or 'https_proxy' in ansible_env"
- name: Ensuring docker service is running
  become: true
  systemd:
    name: docker
    daemon_reload: true
    state: started
- name: Installing docker python library
  become: "{{ not lookup('env','VIRTUAL_ENV') }}"
  pip:
    name: docker
  register: my_result
  until: my_result is succeeded
  retries: 5
  delay: 10
- name: Checking where backports/ssl_match_hostname is installed
  stat:
    path: /usr/local/lib/python2.7/dist-packages/backports/ssl_match_hostname
  register: ssl_match_hostname_result
  when:
    - ansible_python.version.major==2
    - not lookup('env','VIRTUAL_ENV')
- name: Fixing docker python library
  become: true
  copy:
    src: /usr/local/lib/python2.7/dist-packages/backports/ssl_match_hostname
    dest: /usr/lib/python2.7/dist-packages/backports
    mode: preserve
    remote_src: true
  when:
    - ansible_python.version.major==2
    - not lookup('env','VIRTUAL_ENV')
    - ssl_match_hostname_result.stat.exists
